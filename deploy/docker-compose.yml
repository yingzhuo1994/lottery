version: '3'  
services:  
  lottery-mysql:  
    image: mysql:5.7.43  
    container_name: lottery-mysql  
    restart: always  
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
      TZ: Asia/Shanghai
    command:
      --lower_case_table_names=1
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
    volumes:  
      - ./mysql-data:/var/lib/mysql 
      - ./docker-compose-init.sql:/docker-entrypoint-initdb.d/init.sql 
    ports:  
      - "9007:3306"
    networks:  
      - lottery_net

  lottery-rabbitmq:  
    image: rabbitmq:3.6.10-management  
    container_name: lottery-rabbitmq  
    restart: always
    ports:
      - "9008:15672"
      - "9009:5672"
    networks:  
      - lottery_net

  lottery-redis:  
    image: redis:6.0.6  
    container_name: lottery-redis  
    restart: always  
    ports:
      - "9010:6379"
    networks:  
      - lottery_net

  lottery-minio:
    image: minio/minio:RELEASE.2023-12-02T10-51-33Z
    container_name: lottery-minio
    restart: always
    command: server /data --console-address ":9090" --address ":9000"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ./minio-data:/data
      - ./minio-config:/root/.minio
    ports:
      - "9005:9000"
      - "9006:9090"
    networks:
      - lottery_net

  lottery-api:  
    image: api:0.0.1-SNAPSHOT  
    container_name: lottery-api  
    restart: always  
    ports:  
      - "9102:8080" 
    depends_on:  
      - lottery-mysql  
      - lottery-rabbitmq  
      - lottery-redis 
    links:  
      - lottery-mysql  
      - lottery-rabbitmq  
      - lottery-redis  
    environment:
      server.port: 8080
      spring.datasource.url: jdbc:mysql://lottery-mysql/prize?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
      spring.datasource.username: root
      spring.datasource.password: root
      spring.rabbitmq.host: lottery-rabbitmq
      spring.rabbitmq.port: 5672
      spring.redis.host: lottery-redis
      spring.redis.port: 6379
    networks:  
      - lottery_net
#    deploy:
#      replicas: 3

  lottery-msg:  
    image: msg:0.0.1-SNAPSHOT  
    container_name: lottery-msg  
    restart: always  
    links:  
      - lottery-mysql  
      - lottery-rabbitmq  
      - lottery-redis 
    depends_on:  
      - lottery-mysql  
      - lottery-rabbitmq  
      - lottery-redis 
    environment:
      server.port: 8080 
      spring.datasource.url: jdbc:mysql://lottery-mysql/prize?useUnicode=true&characterEncoding=utf-8  
      spring.datasource.username: root  
      spring.datasource.password: root  
      spring.rabbitmq.host: lottery-rabbitmq
      spring.rabbitmq.port: 5672
      spring.redis.host: lottery-redis
      spring.redis.port: 6379
    networks:  
      - lottery_net

  lottery-backend:  
    image: backend:0.0.1-SNAPSHOT  
    container_name: lottery-backend  
    restart: always 
    ports:  
      - "9103:8080"
    links:
      - lottery-mysql
      - lottery-minio
    depends_on:  
      - lottery-mysql
      - lottery-minio
    environment:
      server.port: 8080
      spring.datasource.druid.master.url: jdbc:mysql://lottery-mysql/prize?useUnicode=true&characterEncoding=utf-8
      spring.datasource.druid.master.username: root
      spring.datasource.druid.master.password: root
      minio.url: http://116.62.213.90:9005
      minio.host: lottery-minio
      minio.port: 9000
      minio.bucket: prize
      minio.username: minioadmin
      minio.password: minioadmin
    networks:  
      - lottery_net

  lottery-nginx:  
    image: nginx:1.16.1  
    container_name: lottery-nginx  
    restart: always  
    ports:  
      - "9101:80"  
    volumes:  
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../h5:/usr/share/nginx/html
    depends_on:  
      - lottery-api  
    networks:  
      - lottery_net

  lottery-portainer:
    image: portainer/portainer:latest
    container_name: lottery-portainer
    restart: always
    ports:
      - "9443:9443"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
    networks:
      - lottery_net

networks:
  lottery_net:  
    driver: bridge  
    ipam:  
      config:  
        - subnet: 172.18.0.0/24  


